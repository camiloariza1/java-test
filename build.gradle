plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.18'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'jacoco'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

group = 'com.global.logic'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = '17'
targetCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    runtimeOnly 'com.h2database:h2:1.4.200'

    // JWT dependencies
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    // Javax validation and annotation
    implementation 'org.hibernate.validator:hibernate-validator:6.2.0.Final'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    // Lombok (optional, remove if not used)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                '**/model/**',
                '**/dtos/**'
            ])
        }))
    }
}

test {
 testLogging {
     events "passed", "skipped", "failed"

     showExceptions true
     exceptionFormat "full"
     showCauses true
     showStackTraces true

     showStandardStreams = true
    }
}