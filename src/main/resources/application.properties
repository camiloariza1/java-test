spring.application.name=java-test
# src/main/resources/application.properties

# H2 Database Configuration
spring.datasource.url=jdbc:h2:mem:userdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password

# Enable H2 Console (opcional, útil para depuración)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
# Accede en http://localhost:8080/h2-console

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# hibernate.ddl-auto: validate | update | create | create-drop | none
# 'create-drop': Crea el schema al inicio, lo borra al final (bueno para dev/test)
# 'update': Intenta actualizar el schema existente (cuidado en producción)
# 'validate': Valida que el schema coincida con las entidades
spring.jpa.hibernate.ddl-auto=create-drop
# Fuerza recreación del schema en cada prueba para evitar errores de contexto
spring.jpa.show-sql=true
# Muestra las queries SQL generadas (útil para depurar)
spring.jpa.properties.hibernate.format_sql=true
# Formatea el SQL mostrado

# JWT Configuration
app.jwt.secret=6A2b!x9P4@zQ1rT7sU8vW0yE3jK5mN2pQ7rT6uV9wX2zC5fH8jL1nP4rS7uV0xY3zA6cE9gI2kL5oQ8tB1dF4hJ7mN0qS3vX6z
app.jwt.expiration-ms=3600000
# 1 hour in milliseconds
